<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.terryrao.admin.dao.AdminRoleDao">
    <resultMap id="BaseResultMap" type="com.terryrao.admin.model.AdminRole">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="role_no" property="roleNo" jdbcType="CHAR"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_descn" property="roleDescn" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, role_no, role_name, role_descn, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from admin_role
        where role_no=#{roleNo,jdbcType=CHAR}
    </select>
    <select id="getList" parameterType="com.terryrao.admin.model.AdminRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin_role
    </select>
    <select id="getList_Count" parameterType="com.terryrao.admin.model.AdminRole" resultType="java.lang.Integer">
        select count(ID)
        from admin_role
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete FROM admin_role
        where role_no = #{roleNo,jdbcType=CHAR}
    </delete>
    <insert id="insertByPrimaryKey" parameterType="com.terryrao.admin.model.AdminRole">
        insert into admin_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="roleNo != null">role_no,</if>
            <if test="roleName != null">role_name,</if>
            <if test="roleDescn != null">role_descn,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="roleNo != null">#{roleNo,jdbcType=CHAR},</if>
            <if test="roleName != null">#{roleName,jdbcType=VARCHAR},</if>
            <if test="roleDescn != null">#{roleDescn,jdbcType=VARCHAR},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.terryrao.admin.model.AdminRole">
        update admin_role
        <set>
            <if test="id != null">id=#{id,jdbcType=INTEGER},</if>
            <if test="roleNo != null">role_no=#{roleNo,jdbcType=CHAR},</if>
            <if test="roleName != null">role_name=#{roleName,jdbcType=VARCHAR},</if>
            <if test="roleDescn != null">role_descn=#{roleDescn,jdbcType=VARCHAR},</if>
            <if test="createTime != null">create_time=#{createTime,jdbcType=TIMESTAMP},</if>
            <if test="updateTime != null">update_time=#{updateTime,jdbcType=TIMESTAMP}</if>
        </set>
        where role_no=#{roleNo,jdbcType=CHAR}
    </update>


    <select id="getVoList" parameterType="com.terryrao.admin.model.AdminRole" resultMap="BaseResultMap">
        select a.*
        from admin_role
    </select>


    <select id="findSysRoleByAdminNo" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
            id,
            role_no,
            role_name,
            role_descn,
            create_time,
            update_time
        from admin_role
        where role_no = (select role_no
                         from admin_user_role
                         where admin_No = #{adminNo,jdbcType=VARCHAR})
    </select>
</mapper>
